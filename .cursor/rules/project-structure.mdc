---
description: Juewei UI restaurant website project structure and organization
globs: app/**/*,components/**/*,lib/**/*,public/**/*
alwaysApply: true
---
# Juewei UI Project Structure

This rule outlines the directory structure and organization of the Juewei UI project - a modern restaurant/food company website built with Next.js 15, featuring multi-language support and food brand design.

## Project Overview

**Juewei UI** is a restaurant website project that provides:

- Next.js 15 with App Router architecture
- Multi-language support (Chinese/English)
- Food brand design system with warm colors
- Responsive restaurant website components
- Tailwind CSS styling with custom food brand theme
- Shadcn UI component library integration

## Root Directory Structure

```text
juewei-ui/
├── app/                # 🚀 Next.js 15 App Router pages
├── components/         # 🎨 React components library
├── lib/               # 🛠️ Utility functions and data
├── public/            # 🌐 Static assets and images
├── scripts/           # 📜 Python scripts and automation
├── .cursor/           # 📋 Cursor AI rules and documentation
├── package.json       # 📦 Project dependencies
├── next.config.ts     # ⚙️ Next.js configuration
├── tsconfig.json      # 📝 TypeScript configuration
└── README.md         # 📖 Project documentation
```

## App Directory (`/app/`)

**Purpose**: Next.js 15 App Router pages and layouts for the restaurant website.

```text
app/
├── about/            # 📖 About page
│   └── page.tsx     # About page component
├── contact/          # 📞 Contact page
│   └── page.tsx     # Contact page component
├── partnership/      # 🤝 Partnership page
│   └── page.tsx     # Partnership page component
├── products/         # 🍽️ Products page
│   └── page.tsx     # Products page component
├── layout.tsx       # 🏗️ Root layout component
├── page.tsx         # 🏠 Home page component
├── globals.css      # 🎨 Global styles
├── icon.ico         # 🖼️ Favicon
└── apple-icon.ico   # 🍎 Apple touch icon
```

## Components Directory (`/components/`)

**Purpose**: React component library for the restaurant website with food brand styling.

```text
components/
├── ui/              # 🎨 Shadcn UI base components
│   ├── accordion.tsx    # Collapsible content
│   ├── alert.tsx        # Alert messages
│   ├── button.tsx       # Button components
│   ├── card.tsx         # Card containers
│   ├── carousel.tsx     # Image carousels
│   ├── dialog.tsx       # Modal dialogs
│   ├── form.tsx         # Form components
│   ├── input.tsx        # Input fields
│   ├── navigation-menu.tsx # Navigation components
│   ├── sheet.tsx        # Side sheets
│   ├── tabs.tsx         # Tab navigation
│   └── ...             # Other UI primitives
├── banner-section.tsx      # 🎯 Banner/hero sections
├── brand-advantages.tsx    # ⭐ Brand advantage highlights
├── certifications-section.tsx # 🏆 Certifications display
├── footer.tsx              # 🦶 Site footer
├── four-elements.tsx        # 🔥 Four elements section
├── header.tsx               # 🧭 Site header
├── hero-carousel.tsx        # 🎠 Hero image carousel
├── language-switcher.tsx    # 🌐 Language toggle
├── partnership-cta.tsx      # 🤝 Partnership call-to-action
├── product-hero-carousel.tsx # 🍽️ Product showcase carousel
├── qr-code.tsx              # 📱 QR code component
├── scroll-to-top.tsx        # ⬆️ Scroll to top button
└── theme-provider.tsx       # 🎨 Theme context provider
```

## Lib Directory (`/lib/`)

**Purpose**: Utility functions, data, and internationalization for the restaurant website.

```text
lib/
├── data/            # 📊 Product and content data
│   └── products.ts  # Product information and details
├── i18n/            # 🌐 Internationalization system
│   ├── language-context.tsx # Language context provider
│   └── translations.ts      # Translation strings
└── utils.ts         # 🛠️ Utility functions
```

## Public Directory (`/public/`)

**Purpose**: Static assets, images, and media files for the restaurant website.

```text
public/
├── carousel1/       # 🎠 Hero carousel images
├── carousel2/       # 🎠 Product carousel images
├── fonts/           # 🔤 Custom fonts (Source Han Sans)
│   ├── chinese-fonts.css
│   └── source_han_sans/ # Chinese font files
├── *.webp           # 🖼️ Optimized product images
├── *.jpg            # 📸 Certification images
├── *.png            # 🖼️ Logo and icon images
├── manifest.json    # 📱 PWA manifest
├── robots.txt       # 🤖 SEO robots file
└── sitemap.xml      # 🗺️ SEO sitemap
```

## Scripts Directory (`/scripts/`)

**Purpose**: Python automation scripts for content management.

```text
scripts/
├── crawl_images.py     # 🕷️ Image crawling script
├── requirements.txt    # 📦 Python dependencies
├── run_crawler.sh      # 🚀 Crawler execution script
└── crawl_images.log    # 📝 Crawler log file
```

## Key Configuration Files

### Package Management

- `package.json` - Project dependencies and scripts
- `package-lock.json` - Dependency lock file

### Build & Development

- `next.config.ts` - Next.js configuration
- `tsconfig.json` - TypeScript configuration
- `postcss.config.mjs` - PostCSS configuration
- `eslint.config.mjs` - ESLint configuration

### Styling & Theming

- `app/globals.css` - Global styles and CSS variables
- `components.json` - Shadcn UI configuration

### Deployment

- `vercel.json` - Vercel deployment configuration

## Component Organization Patterns

### Restaurant Components (`/components/`)

- **Food-focused**: Components designed for restaurant branding
- **Multi-language**: Support for Chinese and English content
- **Responsive**: Mobile-first design for restaurant customers
- **Naming convention**: `[Purpose][Section].tsx`

### UI Components (`/components/ui/`)

- **Shadcn-based**: Copy-paste components with customization
- **Accessible**: ARIA-compliant components
- **Themed**: Food brand color integration
- **Consistent**: Standardized component patterns

### Page Components (`/app/`)

- **App Router**: Next.js 15 file-based routing
- **Server Components**: Optimized rendering
- **Layout System**: Consistent page structure
- **SEO Optimized**: Meta tags and structured data

## File Naming Conventions

### Components

- **kebab-case**: `banner-section.tsx`, `hero-carousel.tsx`
- **Descriptive**: Purpose clearly indicated in name
- **Consistent patterns**: `[feature]-[type].tsx`

### Directories

- **kebab-case**: `carousel1/`, `source_han_sans/`
- **Descriptive**: Clear purpose indication
- **Grouped logically**: Related assets together

### App Router Structure

```typescript
// Next.js App Router organization
app/
├── [route]/          # Route-based pages
│   └── page.tsx      # Page component
├── layout.tsx        # Layout component
├── globals.css      # Global styles
└── icon.ico         # Favicon
```

## Restaurant-Specific Patterns

### Food Brand Design

- **Warm Colors**: Reds, oranges, yellows for appetizing appeal
- **Chinese Typography**: Source Han Sans font integration
- **Cultural Sensitivity**: Proper Chinese text rendering
- **Food Photography**: Optimized WebP images

### Multi-language Support

- **Context Provider**: Language switching system
- **Translation Files**: Centralized translation management
- **Font Optimization**: Chinese character support
- **Cultural Adaptation**: Region-specific content

### Performance Optimization

- **Image Optimization**: WebP format with responsive sizing
- **Font Loading**: Local font files for Chinese text
- **Lazy Loading**: Component and image optimization
- **SEO**: Structured data for restaurant listings
